{"version":3,"sources":["img/spotlight.png","img/star.png","img/star_off.png","img/crown_off.png","img/map.png","serviceWorker.ts","firebase.ts","actions/authActions.ts","actions/gameActions.ts","context.tsx","components/Login.tsx","components/private/PrivateRoute.tsx","components/private/TopThree.tsx","components/private/Home.tsx","components/private/Player.tsx","components/private/Lobby.tsx","components/private/Game.tsx","utils/Confetti.ts","components/private/GameResults.tsx","components/private/PlayerStats.tsx","components/private/GameResultsListing.tsx","components/private/WinningStats.tsx","components/private/Leaderboards.tsx","components/Routes.tsx","components/App.tsx","index.tsx","img/crown.png"],"names":["module","exports","Boolean","window","location","hostname","match","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","auth","GoogleAuthProvider","authActions","setAuth","state","logoff","signOut","userId","isAuthenticated","failedAutoLogin","gameActions","loadAssets","user","history","players","Promise","all","getPlayerInfo","getGameHistory","then","snaps","a","_id","val","active","playing","push","Object","values","map","value","momentDate","moment","date","sort","b","format","catch","err","console","error","isLoaded","game","hints","getHints","stats","setImageWithUrl","url","image","data","find","source","getNewImage","getRandomImage","skipImage","gamesRef","database","ref","skippedGame","caption","imageSource","Date","toISOString","winner","guesses","skipped","skipImageAndReload","INITIAL_STATE","resetGame","toggleUserPlayingState","name","player","updateGuesses","addGameToHistory","entry","Math","floor","random","length","e","once","banned","seen","forEach","record","g","guess","includes","localeCompare","undefined","contract","Context","React","createContext","ContextProvider","props","useGovernor","context","actions","children","Provider","useContext","useStyles","makeStyles","theme","root","height","width","overflow","padding","spacing","display","flexDirection","justifyContent","alignItems","form","maxWidth","marginTop","marginBottom","title","textAlign","color","Login","classes","useState","email","setEmail","password","setPassword","setError","shouldRedirect","setShouldRedirect","to","className","join","Typography","variant","onSubmit","event","preventDefault","setPersistence","Auth","Persistence","LOCAL","signInWithEmailAndPassword","res","message","noValidate","TextField","label","onChange","target","size","type","Button","Alert","severity","PrivateRoute","ready","setReady","useEffect","onAuthStateChanged","uid","link","document","createElement","href","path","returnUrl","protocol","host","pathname","search","hash","redirectUrl","encodeURI","replace","Component","component","rest","render","useStyle","topThree","margin","whiteSpace","textOverflow","cardWrapper","position","one","transform","two","three","crown","top","left","TopThree","topPlayers","setTopPlayers","groupedRecords","filter","isAfter","subtract","startOf","reduce","acc","entries","wins","slice","Card","CardContent","src","Crown","alt","flexGrow","header","marginLeft","marginRight","buttons","Home","Spotlight","Link","startIcon","onClick","cursor","Player","images","isCurrentChamp","CrownOff","Star","StarOff","isChamp","generateAlt","Lobby","useParams","decodeURIComponent","getReigningChampion","i","reigningChamp","currentWinStreak","champ","streak","getCurrentWinStreak","key","disabled","encodeURIComponent","transition","transitions","create","easing","sharp","duration","leavingScreen","imageShift","easeOut","enteringScreen","speedDial","bottom","right","speedDialShifted","drawer","flexShrink","drawerPaper","drawerContent","drawerImage","paddingTop","alert","inputs","dialogPaper","dialogContent","Game","useHistory","speedDialOpen","setSpeedDialOpen","drawerOpen","setDrawerOpen","declareWinnerDialogOpen","setDeclareWinnerDialogOpen","skipDialogOpen","setSkipDialogOpen","skipImageOnDialogClose","setSkipImageOnDialogClose","setGuesses","handleSkipDialogClose","log","style","background","Drawer","anchor","open","paper","Map","Autocomplete","freeSolo","options","onInputChange","_","newValue","renderInput","params","keys","Dialog","onClose","DialogTitle","frameBorder","allowFullScreen","gamesDb","newGame","playerDb","update","gamesPlayed","declareWinner","DialogActions","SpeedDial","ariaLabel","icon","SpeedDialIcon","openIcon","onOpen","SpeedDialAction","tooltipTitle","stopPropagation","Confetti","frameInterval","maxCount","speed","alpha","gradient","start","stop","toggle","pause","resume","togglePause","remove","isPaused","isRunning","supportsAnimationFrame","colors","streamingConfetti","animationTimer","lastFrameTime","particles","waveAngle","this","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","now","resetParticle","bind","runAnimation","toggleConfettiPause","particle","color2","x","y","diameter","tilt","tiltAngleIncrement","tiltAngle","PI","resumeConfetti","pauseConfetti","clearRect","innerWidth","innerHeight","delta","updateParticles","drawParticles","timeout","min","max","callback","setTimeout","canvas","getElementById","setAttribute","body","prepend","addEventListener","getContext","count","temp","stopConfetti","startConfetti","x2","y2","beginPath","lineWidth","createLinearGradient","addColorStop","strokeStyle","moveTo","lineTo","stroke","sin","cos","splice","media","card","GameResults","setRecord","recordNotFound","setRecordNotFound","con","Divider","CardHeader","CardMedia","cardContent","paddingBottom","info","PlayerStats","index","Grid","container","item","xs","total","avg","round","Number","generateAverageWin","WINNER_EMOJIS","NO_ONE_EMOJIS","Transition","forwardRef","Slide","direction","results","divider","chip","appBar","dialogImage","opacity","GameResultsListing","dialogImageSource","setDialogImageSource","handleClose","emoji","rel","Chip","fullScreen","TransitionComponent","AppBar","Toolbar","IconButton","edge","aria-label","sectionLeft","sectionRight","sectionBody","list","listItem","listItemIcon","minWidth","paddingRight","WinningStats","winningLocations","setWinningLocations","favoriteGuesses","setFavoriteGuesses","groupedCounts","groupedGuesses","Paper","dense","ListItem","ListItemIcon","ListItemText","primary","userGuesses","topGuess","secondaryText","secondary","leftRow","leftRowNoShrink","Leaderboards","Routes","exact","createMuiTheme","palette","typography","fontFamily","App","CssBaseline","ReactDOM","navigator","serviceWorker","registration","unregister"],"mappings":"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","file":"static/js/main.238ea178.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spotlight.6f01fba9.png\";","module.exports = __webpack_public_path__ + \"static/media/star.3c794117.png\";","module.exports = __webpack_public_path__ + \"static/media/star_off.2a641e87.png\";","module.exports = __webpack_public_path__ + \"static/media/crown_off.978e8029.png\";","module.exports = __webpack_public_path__ + \"static/media/map.ff05dc4d.png\";","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import firebase from 'firebase';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: 'AIzaSyCdoFYL2GI8FqivbhrQiNcpdUmkN5IY010',\r\n  authDomain: 'spotlight-4861d.firebaseapp.com',\r\n  databaseURL: 'https://spotlight-4861d.firebaseio.com',\r\n  projectId: 'spotlight-4861d',\r\n  storageBucket: 'spotlight-4861d.appspot.com',\r\n  messagingSenderId: '213645315924',\r\n  appId: '1:213645315924:web:07ac06c7b7298437e902c1',\r\n  measurementId: 'G-K5XMZ1QK50',\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\nfirebase.analytics();\r\n\r\nexport const provider = new firebase.auth.GoogleAuthProvider();\r\nexport const auth = firebase.auth();\r\nexport default firebase;\r\n","import IState from './../interfaces/IState';\r\nimport { auth } from '../firebase';\r\n\r\nexport const authActions = {\r\n  setAuth(auth: any) {\r\n    return (state: IState): IState => {\r\n      return {\r\n        ...state,\r\n        auth: {\r\n          ...state.auth,\r\n          ...auth,\r\n        },\r\n      };\r\n    };\r\n  },\r\n  async logoff() {\r\n    await auth.signOut();\r\n    return (state: IState): IState => {\r\n      return {\r\n        ...state,\r\n        auth: {\r\n          userId: '',\r\n          isAuthenticated: false,\r\n          failedAutoLogin: false,\r\n        },\r\n      };\r\n    };\r\n  },\r\n};\r\n","import moment from 'moment';\r\nimport firebase from '../firebase';\r\n\r\nimport { data } from '../data/contents.json';\r\nimport { INITIAL_STATE } from './../context';\r\nimport IState from './../interfaces/IState';\r\nimport IGameResults from './../interfaces/IGameResults';\r\nimport IGuesses from '../interfaces/IGuesses';\r\nimport IGameResultsDb from './../interfaces/IGameResultsDb';\r\n\r\nexport const gameActions = {\r\n  async loadAssets(user: string) {\r\n    let history: any[] = [];\r\n    const players: any[] = [];\r\n    await Promise.all([getPlayerInfo(user), getGameHistory(user)])\r\n      .then(async (snaps) => {\r\n        let val = snaps[0].val();\r\n        for (let _id in val) {\r\n          val[_id]['_id'] = _id;\r\n          if (val[_id].active) {\r\n            val[_id].playing = true;\r\n          } else {\r\n            val[_id].playing = false;\r\n          }\r\n          players.push(val[_id]);\r\n        }\r\n\r\n        val = snaps[1].val();\r\n        if (val) {\r\n          history = Object.values(val)\r\n            .map((value: any) => ({\r\n              ...value,\r\n              momentDate: moment(value.date, [\r\n                'M/D/YYYY',\r\n                'YYYY-MM-DDTHH:mm:ss.SSS[Z]',\r\n              ]),\r\n            }))\r\n            .sort(\r\n              (a: any, b: any) =>\r\n                b.momentDate.format('YYYYMMDDHHmmss') -\r\n                a.momentDate.format('YYYYMMDDHHmmss'),\r\n            );\r\n        }\r\n      })\r\n      .catch((err) => console.error(err));\r\n    return (state: IState): IState => {\r\n      return {\r\n        ...state,\r\n        isLoaded: true,\r\n        game: {\r\n          ...state.game,\r\n          players,\r\n          hints: getHints(state.stats.history),\r\n        },\r\n        stats: {\r\n          ...state.stats,\r\n          history,\r\n        },\r\n      };\r\n    };\r\n  },\r\n  setImageWithUrl(url: string) {\r\n    return (state: IState): IState => {\r\n      return {\r\n        ...state,\r\n        game: {\r\n          ...state.game,\r\n          image: data.find((image) => image.source === url),\r\n        },\r\n      };\r\n    };\r\n  },\r\n  getNewImage() {\r\n    return (state: IState): IState => {\r\n      return {\r\n        ...state,\r\n        game: {\r\n          ...state.game,\r\n          image: getRandomImage(state.stats.history),\r\n        },\r\n      };\r\n    };\r\n  },\r\n  skipImage() {\r\n    return (state: IState): IState => {\r\n      const gamesRef = firebase.database().ref(state.auth.userId + '/games');\r\n      const skippedGame: IGameResultsDb = {\r\n        location: state.game.image?.caption || '',\r\n        imageSource: state.game.image?.source || '',\r\n        date: new Date().toISOString(),\r\n        winner: 'SKIPPED',\r\n        guesses: {},\r\n        skipped: true,\r\n      };\r\n      gamesRef.push(skippedGame);\r\n      return {\r\n        ...state,\r\n        game: {\r\n          ...state.game,\r\n          image: getRandomImage(state.stats.history),\r\n        },\r\n        stats: {\r\n          ...state.stats,\r\n          history: [\r\n            ...state.stats.history,\r\n            {\r\n              ...skippedGame,\r\n              momentDate: moment(skippedGame.date),\r\n              guesses: {},\r\n            } as IGameResults,\r\n          ],\r\n        },\r\n      };\r\n    };\r\n  },\r\n  skipImageAndReload() {\r\n    return (state: IState): IState => {\r\n      const gamesRef = firebase.database().ref(state.auth.userId + '/games');\r\n      const skippedGame: IGameResultsDb = {\r\n        location: state.game.image?.caption || '',\r\n        imageSource: state.game.image?.source || '',\r\n        date: new Date().toISOString(),\r\n        winner: 'SKIPPED',\r\n        guesses: {},\r\n        skipped: true,\r\n      };\r\n      gamesRef.push(skippedGame);\r\n      return INITIAL_STATE;\r\n    };\r\n  },\r\n  resetGame() {\r\n    return (): IState => {\r\n      return INITIAL_STATE;\r\n    };\r\n  },\r\n  toggleUserPlayingState(name: string) {\r\n    return (state: IState): IState => {\r\n      return {\r\n        ...state,\r\n        game: {\r\n          ...state.game,\r\n          players: state.game.players.map((player) => {\r\n            if (player.name === name) {\r\n              player.playing = !player.playing;\r\n            }\r\n            return player;\r\n          }),\r\n        },\r\n      };\r\n    };\r\n  },\r\n  updateGuesses(guesses: IGuesses) {\r\n    return (state: IState): IState => {\r\n      return {\r\n        ...state,\r\n        game: {\r\n          ...state.game,\r\n          guesses,\r\n        },\r\n      };\r\n    };\r\n  },\r\n  addGameToHistory(game: IGameResults) {\r\n    return (state: IState): IState => {\r\n      return {\r\n        ...state,\r\n        stats: {\r\n          ...state.stats,\r\n          history: [game, ...state.stats.history],\r\n        },\r\n      };\r\n    };\r\n  },\r\n};\r\n\r\nconst getRandomImage = (history: any[]) => {\r\n  const entry = data[Math.floor(Math.random() * data.length)];\r\n  if (history.find((e) => e.imageSource === entry.source)) {\r\n    return getRandomImage(history);\r\n  }\r\n  return entry;\r\n};\r\n\r\nconst getPlayerInfo = (user: string) => {\r\n  const playersRef = firebase.database().ref(user + '/players');\r\n  return playersRef.once('value');\r\n};\r\n\r\nconst getGameHistory = (user: string) => {\r\n  const gameHistoryRef = firebase.database().ref(user + '/games');\r\n  return gameHistoryRef.once('value');\r\n};\r\n\r\nconst getHints = (history: any[]) => {\r\n  const banned = [\r\n    'USA',\r\n    'U.S.A.',\r\n    'U.S.',\r\n    'US',\r\n    'United Stated of America',\r\n    'U.K.',\r\n    'UK',\r\n    'Australia',\r\n    'Carribean',\r\n  ];\r\n  const seen: any = {};\r\n  const hints: any[] = [];\r\n  history.forEach((record) => {\r\n    if (record.guesses) {\r\n      for (let g in record.guesses) {\r\n        const guess = record.guesses[g];\r\n        if (!(guess in seen) && !banned.includes(guess)) {\r\n          seen[guess] = 1;\r\n          hints.push(guess);\r\n        }\r\n      }\r\n    }\r\n  });\r\n  return hints.sort((a: string, b: string) => a.localeCompare(b));\r\n};\r\n","import React from 'react';\r\nimport { useGovernor } from '@techempower/react-governor';\r\n\r\nimport IState from './interfaces/IState';\r\n\r\nimport { authActions } from './actions/authActions';\r\nimport { gameActions } from './actions/gameActions';\r\n\r\nexport const INITIAL_STATE: IState = {\r\n  isLoaded: false,\r\n  auth: {\r\n    userId: '',\r\n    isAuthenticated: false,\r\n    failedAutoLogin: false,\r\n  },\r\n  game: {\r\n    players: [],\r\n    guesses: {},\r\n    hints: [],\r\n    image: undefined,\r\n  },\r\n  stats: {\r\n    history: [],\r\n  },\r\n};\r\n\r\nconst contract = {\r\n  ...authActions,\r\n  ...gameActions,\r\n};\r\n\r\nconst Context = React.createContext(INITIAL_STATE);\r\n\r\nexport default function ContextProvider(props: any) {\r\n  const [context, actions] = useGovernor(INITIAL_STATE, contract);\r\n\r\n  const { children } = props;\r\n\r\n  return (\r\n    <Context.Provider value={[context, actions] as any}>\r\n      {children}\r\n    </Context.Provider>\r\n  );\r\n}\r\n\r\nexport function useContext(): [IState, any] {\r\n  return React.useContext(Context) as any;\r\n}\r\n","import React, { FC, useState, FormEvent } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport firebase, { auth } from '../firebase';\r\n\r\nimport { makeStyles, Theme } from '@material-ui/core';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { useContext } from '../context';\r\n\r\nconst Login: FC = () => {\r\n  const classes = useStyles();\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [shouldRedirect, setShouldRedirect] = useState(false);\r\n\r\n  const [, { setAuth }] = useContext();\r\n\r\n  const login = () => {\r\n    auth\r\n      .setPersistence(firebase.auth.Auth.Persistence.LOCAL)\r\n      .then(async () => {\r\n        const res: any = await auth.signInWithEmailAndPassword(email, password);\r\n        if (res.user) {\r\n          setAuth({\r\n            userId: res.user,\r\n            isAuthenticated: true,\r\n            failedAutoLogin: false,\r\n          });\r\n          setShouldRedirect(true);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setPassword('');\r\n        setError(err.message);\r\n      });\r\n  };\r\n\r\n  const handleOnSubmit = (event: FormEvent<HTMLFormElement>) => {\r\n    event.preventDefault();\r\n    login();\r\n  };\r\n\r\n  if (shouldRedirect) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n\r\n  return (\r\n    <div className={[classes.root, 'styled-scrollbar'].join(' ')}>\r\n      <Typography variant=\"h1\" className={classes.title}>\r\n        <small>Into the</small>\r\n        <br /> <strong>Spotlight</strong>\r\n      </Typography>\r\n      <form\r\n        onSubmit={handleOnSubmit}\r\n        noValidate={false}\r\n        className={classes.form}\r\n      >\r\n        <TextField\r\n          label=\"Email\"\r\n          value={email}\r\n          onChange={(event) => setEmail(event.target.value)}\r\n          variant=\"filled\"\r\n          size=\"small\"\r\n        />\r\n        <TextField\r\n          label=\"Password\"\r\n          type=\"password\"\r\n          value={password}\r\n          onChange={(event) => setPassword(event.target.value)}\r\n          variant=\"filled\"\r\n          size=\"small\"\r\n        />\r\n        <Button type=\"submit\" variant=\"contained\" color=\"primary\">\r\n          Login\r\n        </Button>\r\n        {error && <Alert severity=\"error\">{error}</Alert>}\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    height: '100vh',\r\n    width: '100vw',\r\n    overflow: 'auto',\r\n    padding: theme.spacing(4),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  form: {\r\n    maxWidth: '300px',\r\n    width: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    marginTop: theme.spacing(4),\r\n    '& > *': {\r\n      width: '100%',\r\n      marginBottom: theme.spacing(2),\r\n    },\r\n  },\r\n  title: {\r\n    textAlign: 'center',\r\n    '& strong': {\r\n      color: 'yellow',\r\n    },\r\n  },\r\n}));\r\n\r\nexport default Login;\r\n","import React, { FC, useState, useEffect } from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nimport { useContext } from '../../context';\r\nimport firebase from 'firebase';\r\n\r\ninterface IProps {\r\n  component: any;\r\n  path: string;\r\n  exact?: boolean;\r\n}\r\n\r\nexport const PrivateRoute: FC<IProps> = (props) => {\r\n  const [{ isLoaded, auth }, { loadAssets, setAuth }] = useContext();\r\n  const { userId, isAuthenticated, failedAutoLogin } = auth;\r\n  const [ready, setReady] = useState(isAuthenticated);\r\n\r\n  useEffect(() => {\r\n    if (!userId && !failedAutoLogin) {\r\n      firebase.auth().onAuthStateChanged((user) => {\r\n        if (user) {\r\n          setAuth({ userId: user.uid, isAuthenticated: true });\r\n          if (!isLoaded) {\r\n            loadAssets(user.uid);\r\n          }\r\n        } else {\r\n          setAuth({ failedAutoLogin: true });\r\n        }\r\n      });\r\n    } else {\r\n      setReady(true);\r\n    }\r\n  }, [isLoaded, userId, failedAutoLogin, setAuth, loadAssets]);\r\n\r\n  const link = document.createElement('a');\r\n  link.href = props.path;\r\n  const returnUrl = `${link.protocol}//${link.host}${link.pathname}${link.search}${link.hash}`;\r\n  const redirectUrl = `/login/${encodeURI(returnUrl).replace(/\\//g, '%2F')}`;\r\n  if (ready) {\r\n    const { component: Component, ...rest } = props;\r\n    return (\r\n      <Route\r\n        {...rest}\r\n        render={(props) => {\r\n          if (userId) {\r\n            return <Component {...props} />;\r\n          } else {\r\n            return <Redirect to={redirectUrl} />;\r\n          }\r\n        }}\r\n      />\r\n    );\r\n  }\r\n\r\n  return <div></div>;\r\n};\r\n\r\nexport default PrivateRoute;\r\n","import React, { FC, useEffect, useState } from 'react';\r\nimport moment from 'moment';\r\n\r\nimport { makeStyles, Theme } from '@material-ui/core';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { useContext } from '../../context';\r\n\r\nimport Crown from '../../img/crown.png';\r\n\r\nconst TopThree: FC = () => {\r\n  const classes = useStyle();\r\n  const [{ stats }] = useContext();\r\n  const { history } = stats;\r\n\r\n  const [topPlayers, setTopPlayers] = useState<any[] | null>(null);\r\n\r\n  useEffect(() => {\r\n    if (history) {\r\n      const groupedRecords = history\r\n        .filter(\r\n          (record) =>\r\n            record.momentDate.isAfter(\r\n              moment().subtract(14, 'days').startOf('day'),\r\n            ) && record.winner !== 'SKIPPED',\r\n        )\r\n        .reduce((acc, record) => {\r\n          if (acc[record.winner]) {\r\n            acc[record.winner]++;\r\n          } else {\r\n            acc[record.winner] = 1;\r\n          }\r\n          return acc;\r\n        }, {});\r\n      const topThree = Object.entries(groupedRecords)\r\n        .map(([key, value]) => ({\r\n          name: key,\r\n          wins: value,\r\n        }))\r\n        .sort((a: any, b: any) => b.wins - a.wins)\r\n        .slice(0, 3);\r\n      setTopPlayers(topThree);\r\n    }\r\n  }, [history]);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {topPlayers && (\r\n        <>\r\n          <Typography variant=\"h4\">Top 3</Typography>\r\n          <Typography variant=\"caption\">Last 14 Days</Typography>\r\n          <div className={classes.topThree}>\r\n            {topPlayers[1] && (\r\n              <Card className={classes.two}>\r\n                <CardContent>\r\n                  <Typography>{topPlayers[1].name}</Typography>\r\n                  <Typography variant=\"caption\">\r\n                    {topPlayers[1].wins}{' '}\r\n                    {topPlayers[1].wins === 1 ? 'win' : 'wins'}\r\n                  </Typography>\r\n                </CardContent>\r\n              </Card>\r\n            )}\r\n            {topPlayers[0] && (\r\n              <div className={classes.cardWrapper}>\r\n                <Card className={classes.one}>\r\n                  <CardContent>\r\n                    <Typography>{topPlayers[0].name}</Typography>\r\n                    <Typography variant=\"caption\">\r\n                      {topPlayers[0].wins}{' '}\r\n                      {topPlayers[0].wins === 1 ? 'win' : 'wins'}\r\n                    </Typography>\r\n                  </CardContent>\r\n                </Card>\r\n                <img src={Crown} className={classes.crown} alt=\"Champion\" />\r\n              </div>\r\n            )}\r\n            {topPlayers[2] && (\r\n              <Card className={classes.three}>\r\n                <CardContent>\r\n                  <Typography>{topPlayers[2].name}</Typography>\r\n                  <Typography variant=\"caption\">\r\n                    {topPlayers[2].wins}{' '}\r\n                    {topPlayers[2].wins === 1 ? 'win' : 'wins'}\r\n                  </Typography>\r\n                </CardContent>\r\n              </Card>\r\n            )}\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyle = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  topThree: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    width: '100%',\r\n    maxWidth: 400,\r\n    '& > div': {\r\n      margin: theme.spacing(2, 1),\r\n      width: '33.3%',\r\n      whiteSpace: 'nowrap',\r\n      textAlign: 'center',\r\n      overflow: 'unset',\r\n      '& p': {\r\n        textOverflow: 'ellipsis',\r\n        overflow: 'hidden',\r\n      },\r\n    },\r\n  },\r\n  cardWrapper: {\r\n    position: 'relative',\r\n  },\r\n  one: {\r\n    transform: 'scale(1.1)',\r\n    color: 'yellow',\r\n  },\r\n  two: {},\r\n  three: {},\r\n  crown: {\r\n    position: 'absolute',\r\n    width: 50,\r\n    height: 50,\r\n    top: 0,\r\n    left: 0,\r\n    transform: 'translate(-50%, -50%) rotate(-35deg)',\r\n  },\r\n}));\r\n\r\nexport default TopThree;\r\n","import React, { FC } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { makeStyles, Theme } from '@material-ui/core';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport PublicIcon from '@material-ui/icons/Public';\r\nimport ListIcon from '@material-ui/icons/List';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\n\r\nimport { useContext } from '../../context';\r\nimport TopThree from './TopThree';\r\nimport Spotlight from '../../img/spotlight.png';\r\n\r\ninterface IProps {}\r\n\r\nconst Home: FC<IProps> = () => {\r\n  const classes = useStyles();\r\n\r\n  const [, { logoff }] = useContext();\r\n\r\n  return (\r\n    <div className={[classes.root, 'styled-scrollbar'].join(' ')}>\r\n      <div className={classes.header}>\r\n        <div>\r\n          <img src={Spotlight} alt=\"logo\" className={classes.image} />\r\n        </div>\r\n        <div>\r\n          <Typography variant=\"h1\" className={classes.title}>\r\n            <small>INTO THE </small>\r\n            <strong>SPOTLIGHT</strong>\r\n          </Typography>\r\n          <Typography variant=\"h4\">\r\n            <small>darkestmode</small>\r\n          </Typography>\r\n        </div>\r\n      </div>\r\n      <TopThree />\r\n      <div className={classes.buttons}>\r\n        <Button\r\n          component={Link}\r\n          to=\"/lobby\"\r\n          color=\"primary\"\r\n          size=\"large\"\r\n          variant=\"contained\"\r\n          startIcon={<PublicIcon />}\r\n        >\r\n          Play\r\n        </Button>\r\n        <Button\r\n          component={Link}\r\n          to=\"/leaderboards\"\r\n          color=\"secondary\"\r\n          size=\"large\"\r\n          variant=\"contained\"\r\n          startIcon={<ListIcon />}\r\n        >\r\n          Leaderboards\r\n        </Button>\r\n        <Button\r\n          onClick={logoff}\r\n          color=\"secondary\"\r\n          variant=\"outlined\"\r\n          startIcon={<ExitToAppIcon />}\r\n        >\r\n          Quit\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    height: '100vh',\r\n    overflow: 'auto',\r\n    flexGrow: 1,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    padding: theme.spacing(8),\r\n  },\r\n  header: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    marginLeft: -150 / 2,\r\n    alignItems: 'center',\r\n    marginBottom: theme.spacing(4),\r\n    '& strong': {\r\n      color: 'yellow',\r\n    },\r\n  },\r\n  image: {\r\n    width: 150,\r\n    marginRight: theme.spacing(4),\r\n  },\r\n  title: {\r\n    width: 'min-content',\r\n  },\r\n  buttons: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    marginTop: theme.spacing(4),\r\n    '& > *': {\r\n      marginBottom: theme.spacing(2),\r\n      maxWidth: 200,\r\n      width: '100%',\r\n    },\r\n  },\r\n}));\r\n\r\nexport default Home;\r\n","import React from 'react';\r\n\r\nimport { makeStyles, Theme } from '@material-ui/core';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { useContext } from '../../context';\r\nimport IPlayer from './../../interfaces/IPlayer';\r\n\r\nimport Star from '../../img/star.png';\r\nimport StarOff from '../../img/star_off.png';\r\nimport Crown from '../../img/crown.png';\r\nimport CrownOff from '../../img/crown_off.png';\r\n\r\ninterface IProps {\r\n  player: IPlayer;\r\n}\r\n\r\nconst Player = ({ player }) => {\r\n  const classes = useStyles();\r\n\r\n  const [, { toggleUserPlayingState }] = useContext();\r\n\r\n  const generateAlt = (isChamp) => {\r\n    return isChamp ? 'crown' : 'star';\r\n  };\r\n\r\n  const getImages = (isChamp) => {\r\n    return isChamp ? [Crown, CrownOff] : [Star, StarOff];\r\n  };\r\n\r\n  const images = getImages(player.isCurrentChamp);\r\n  const alt = generateAlt(player.isCurrentChamp);\r\n\r\n  return (\r\n    <div\r\n      className={classes.root}\r\n      onClick={() => toggleUserPlayingState(player.name)}\r\n    >\r\n      {player.playing && <img src={images[0]} alt={alt} />}\r\n      {!player.playing && <img src={images[1]} alt={alt + ' off'} />}\r\n      <Typography className=\"name\" variant=\"h3\">\r\n        {player.name}\r\n      </Typography>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    cursor: 'pointer',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    marginBottom: theme.spacing(),\r\n    '& > img': {\r\n      width: 50,\r\n      height: 50,\r\n      margin: theme.spacing(1, 2),\r\n    },\r\n  },\r\n}));\r\n\r\nexport default Player;\r\n","import React, { FC, useEffect } from 'react';\r\nimport { Link, useParams } from 'react-router-dom';\r\n\r\nimport { makeStyles, Theme } from '@material-ui/core';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\n\r\nimport { useContext } from '../../context';\r\nimport Player from './Player';\r\n\r\nconst Lobby: FC = () => {\r\n  const classes = useStyles();\r\n  const params: any = useParams();\r\n  const { url } = params;\r\n  const [{ game, stats }, { getNewImage, setImageWithUrl }] = useContext();\r\n  const { players, image } = game;\r\n  const { history } = stats;\r\n\r\n  useEffect(() => {\r\n    if (!image) {\r\n      if (url) {\r\n        setImageWithUrl(decodeURIComponent(url));\r\n      } else {\r\n        getNewImage();\r\n      }\r\n    }\r\n  }, [url, image, getNewImage, setImageWithUrl]);\r\n\r\n  const getReigningChampion = (history) => {\r\n    for (let i = 0; i < history.length; i++) {\r\n      if (history[i].winner !== 'SKIPPED') {\r\n        return history[i].winner;\r\n      }\r\n    }\r\n    return '';\r\n  };\r\n\r\n  const getCurrentWinStreak = (history) => {\r\n    const champ = getReigningChampion(history);\r\n    let streak = 0;\r\n    for (let i = 0; i < history.length; i++) {\r\n      if (history[i].winner === 'SKIPPED') {\r\n        continue;\r\n      } else if (champ === history[i].winner) {\r\n        streak++;\r\n      } else {\r\n        break;\r\n      }\r\n    }\r\n    return streak;\r\n  };\r\n\r\n  // TODO: Move all this logic into an action\r\n  const reigningChamp = getReigningChampion(history);\r\n  const currentWinStreak = getCurrentWinStreak(history);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={['styled-scrollbar', classes.players].join(' ')}>\r\n        {players\r\n          .filter((player) => player.active)\r\n          .sort((a: any, b: any) => a.name - b.name)\r\n          .map((player) => {\r\n            if (player.name !== 'No one') {\r\n              return (\r\n                <Player\r\n                  key={player.name}\r\n                  player={{\r\n                    ...player,\r\n                    isCurrentChamp: player.name === reigningChamp,\r\n                    currentWinStreak:\r\n                      player.name === reigningChamp ? currentWinStreak : 0,\r\n                  }}\r\n                />\r\n              );\r\n            } else {\r\n              return null;\r\n            }\r\n          })}\r\n      </div>\r\n      <div className={classes.buttons}>\r\n        <Button\r\n          color=\"primary\"\r\n          variant=\"contained\"\r\n          size=\"large\"\r\n          component={Link}\r\n          disabled={!image?.source}\r\n          to={`/game/${encodeURIComponent(image ? image.source : '')}`}\r\n          startIcon={<PlayArrowIcon />}\r\n        >\r\n          Start Game\r\n        </Button>\r\n        <Button\r\n          color=\"primary\"\r\n          variant=\"outlined\"\r\n          size=\"large\"\r\n          startIcon={<HomeIcon />}\r\n          component={Link}\r\n          to=\"/\"\r\n        >\r\n          Back to Home\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    height: '100%',\r\n    width: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  players: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    maxWidth: 400,\r\n    overflow: 'auto',\r\n    padding: theme.spacing(),\r\n    margin: theme.spacing(4, 2),\r\n  },\r\n  buttons: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    marginTop: theme.spacing(4),\r\n    '& > *': {\r\n      marginBottom: theme.spacing(2),\r\n      maxWidth: 200,\r\n      width: '100%',\r\n    },\r\n  },\r\n}));\r\n\r\nexport default Lobby;\r\n","import React, { FC, useState, useEffect } from 'react';\r\nimport { useParams, Redirect, useHistory } from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport firebase from '../../firebase';\r\n\r\nimport { makeStyles, Theme } from '@material-ui/core';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport SpeedDial from '@material-ui/lab/SpeedDial';\r\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\r\nimport SpeedDialAction from '@material-ui/lab/SpeedDialAction';\r\n\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\r\nimport WeekendIcon from '@material-ui/icons/Weekend';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\n\r\nimport { useContext } from '../../context';\r\nimport IGameResultsDb from '../../interfaces/IGameResultsDb';\r\nimport Map from '../../img/map.png';\r\n\r\nconst Game: FC = () => {\r\n  const params: any = useParams();\r\n  const { url } = params;\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n\r\n  const [\r\n    { auth, game },\r\n    { setImageWithUrl, skipImage, addGameToHistory, getNewImage },\r\n  ] = useContext();\r\n  const { userId } = auth;\r\n  const { hints, image, players } = game;\r\n\r\n  const [speedDialOpen, setSpeedDialOpen] = useState(false);\r\n  const [drawerOpen, setDrawerOpen] = useState(false);\r\n  const [declareWinnerDialogOpen, setDeclareWinnerDialogOpen] = React.useState(\r\n    false,\r\n  );\r\n  const [skipDialogOpen, setSkipDialogOpen] = useState(false);\r\n  const [skipImageOnDialogClose, setSkipImageOnDialogClose] = useState(false);\r\n  const [error, setError] = useState('');\r\n  const [guesses, setGuesses] = useState({});\r\n\r\n  useEffect(() => {\r\n    if (!image && url) {\r\n      setImageWithUrl(decodeURIComponent(url));\r\n    }\r\n    if (image && url && image.source !== decodeURIComponent(url)) {\r\n      history.push(encodeURIComponent(image.source));\r\n    }\r\n  }, [url, image, history, setImageWithUrl]);\r\n\r\n  const handleSkipClick = (event: any) => {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    setSkipDialogOpen(true);\r\n  };\r\n\r\n  const handleSkipDialogClose = () => {\r\n    console.log(skipImageOnDialogClose);\r\n    if (skipImageOnDialogClose) {\r\n      skipImage();\r\n      setSkipImageOnDialogClose(false);\r\n    }\r\n    setSkipDialogOpen(false);\r\n  };\r\n\r\n  const submitGuesses = () => {\r\n    if (\r\n      Object.keys(guesses).filter((guess) => guess).length <\r\n      players.filter((player) => player.playing).length - 1 // -1 for No one\r\n    ) {\r\n      setError('Every player must include a guess');\r\n    } else {\r\n      setDeclareWinnerDialogOpen(true);\r\n    }\r\n  };\r\n\r\n  const setGoogleSrc = () => {\r\n    return `https://www.google.com/maps/embed/v1/place?q=${image?.caption}&zoom=7&key=AIzaSyC1aEMKRB6A4_rZq8uwov5Q_uRkYy1TK0Q`;\r\n  };\r\n\r\n  const declareWinner = (winner: string) => {\r\n    if (image) {\r\n      const gamesDb = firebase.database().ref(userId + '/games');\r\n      const newGame: IGameResultsDb = {\r\n        location: image.caption,\r\n        imageSource: image.source,\r\n        date: new Date().toISOString(),\r\n        winner,\r\n        guesses,\r\n        skipped: false,\r\n      };\r\n      gamesDb.push(newGame);\r\n\r\n      players\r\n        .filter((player) => player.playing)\r\n        .forEach((player) => {\r\n          const playerDb = firebase\r\n            .database()\r\n            .ref(userId + '/players/' + player._id);\r\n          if (player.name === winner) {\r\n            playerDb.update({\r\n              wins: player.wins += 1,\r\n              gamesPlayed: player.gamesPlayed += 1,\r\n            });\r\n          } else {\r\n            playerDb.update({ gamesPlayed: player.gamesPlayed += 1 });\r\n          }\r\n        });\r\n      addGameToHistory({ ...newGame, momentDate: moment(newGame.date) });\r\n      getNewImage();\r\n      history.push(`/game-results/${url}`);\r\n    }\r\n  };\r\n\r\n  if (game.players.length === 0) {\r\n    return <Redirect to={`/lobby/${url}`} />;\r\n  }\r\n\r\n  if (!image) {\r\n    return <div>Loading, please wait . . .</div>;\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {/* Image for the game */}\r\n      <div\r\n        className={[classes.image, drawerOpen ? classes.imageShift : ''].join(\r\n          ' ',\r\n        )}\r\n        style={{\r\n          background: `url(${image.source}) center / contain no-repeat`,\r\n        }}\r\n      />\r\n      {/* Drawer used to fill in guesses */}\r\n      <Drawer\r\n        className={classes.drawer}\r\n        variant=\"persistent\"\r\n        anchor=\"right\"\r\n        open={drawerOpen}\r\n        classes={{\r\n          paper: [classes.drawerPaper, 'styled-scrollbar'].join(' '),\r\n        }}\r\n      >\r\n        <div className={classes.drawerContent}>\r\n          <img src={Map} alt=\"Map\" width=\"40\" height=\"40\" />\r\n          <div className={classes.inputs}>\r\n            {players\r\n              .filter((player) => player.playing && player.name !== 'No one')\r\n              .map((player) => (\r\n                <Autocomplete\r\n                  key={player.name}\r\n                  freeSolo\r\n                  options={hints}\r\n                  value={guesses[player.name] || ''}\r\n                  onInputChange={(_, newValue) =>\r\n                    setGuesses({ ...guesses, [player.name]: newValue })\r\n                  }\r\n                  renderInput={(params) => (\r\n                    <TextField\r\n                      {...params}\r\n                      label={player.name}\r\n                      variant=\"filled\"\r\n                    />\r\n                  )}\r\n                ></Autocomplete>\r\n              ))}\r\n          </div>\r\n          <Button\r\n            onClick={submitGuesses}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            size=\"large\"\r\n            startIcon={<CheckIcon />}\r\n          >\r\n            Submit\r\n          </Button>\r\n          {error && (\r\n            <Alert severity=\"error\" className={classes.alert}>\r\n              {error}\r\n            </Alert>\r\n          )}\r\n        </div>\r\n      </Drawer>\r\n      {/* Dialog used to declare the winner */}\r\n      <Dialog\r\n        onClose={() => setDeclareWinnerDialogOpen(false)}\r\n        open={declareWinnerDialogOpen}\r\n        classes={{\r\n          paper: classes.dialogPaper,\r\n        }}\r\n      >\r\n        <DialogTitle>{image.caption}</DialogTitle>\r\n        <div className={classes.dialogContent}>\r\n          <div className=\"styled-scrollbar\">\r\n            <div\r\n              className={[classes.image, classes.drawerImage].join(' ')}\r\n              style={{\r\n                background: `url(${image.source}) center / contain no-repeat`,\r\n              }}\r\n            />\r\n            <iframe\r\n              title=\"google\"\r\n              width={'100%'}\r\n              height=\"250\"\r\n              frameBorder=\"0\"\r\n              src={setGoogleSrc()}\r\n              allowFullScreen\r\n            ></iframe>\r\n          </div>\r\n          <div className={[classes.guesses, 'styled-scrollbar'].join(' ')}>\r\n            {players\r\n              .filter((player) => player.playing)\r\n              .sort(\r\n                (a, b) =>\r\n                  guesses[a.name] &&\r\n                  guesses[a.name].localeCompare(guesses[b.name]),\r\n              )\r\n              .map((player) => (\r\n                <Button\r\n                  key={player.name}\r\n                  variant=\"outlined\"\r\n                  className={classes.guess}\r\n                  onClick={() => declareWinner(player.name)}\r\n                >\r\n                  {guesses[player.name] ? guesses[player.name] + ' - ' : ''}\r\n                  {player.name}\r\n                </Button>\r\n              ))}\r\n          </div>\r\n        </div>\r\n      </Dialog>\r\n      {/* Dialog to skip the image */}\r\n      <Dialog onClose={handleSkipDialogClose} open={skipDialogOpen}>\r\n        <DialogTitle>\r\n          {skipImageOnDialogClose\r\n            ? image.caption\r\n            : 'Are you sure you want to skip?'}\r\n        </DialogTitle>\r\n        <DialogActions>\r\n          {!skipImageOnDialogClose && (\r\n            <>\r\n              <Button\r\n                color=\"primary\"\r\n                variant=\"contained\"\r\n                onClick={() => setSkipImageOnDialogClose(true)}\r\n                startIcon={<CheckIcon />}\r\n              >\r\n                Yes\r\n              </Button>\r\n              <Button\r\n                variant=\"outlined\"\r\n                onClick={() => setSkipDialogOpen(false)}\r\n                startIcon={<ClearIcon />}\r\n              >\r\n                No\r\n              </Button>\r\n            </>\r\n          )}\r\n          {skipImageOnDialogClose && (\r\n            <Button\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n              onClick={handleSkipDialogClose}\r\n              startIcon={<ClearIcon />}\r\n            >\r\n              Close\r\n            </Button>\r\n          )}\r\n        </DialogActions>\r\n      </Dialog>\r\n      {/* Speed dial of actions */}\r\n      <SpeedDial\r\n        ariaLabel=\"SpeedDial openIcon example\"\r\n        className={[\r\n          'dial',\r\n          classes.speedDial,\r\n          drawerOpen ? classes.speedDialShifted : '',\r\n        ].join(' ')}\r\n        icon={\r\n          <SpeedDialIcon\r\n            openIcon={drawerOpen ? <ChevronRightIcon /> : <ChevronLeftIcon />}\r\n          />\r\n        }\r\n        onClose={() => setSpeedDialOpen(false)}\r\n        onOpen={() => setSpeedDialOpen(true)}\r\n        onClick={() => setDrawerOpen(!drawerOpen)}\r\n        open={speedDialOpen}\r\n      >\r\n        <SpeedDialAction\r\n          icon={drawerOpen ? <ChevronRightIcon /> : <ChevronLeftIcon />}\r\n          tooltipTitle={drawerOpen ? 'Hide Inputs' : 'Show Inputs'}\r\n          onClick={() => setDrawerOpen(!drawerOpen)}\r\n        />\r\n        <SpeedDialAction\r\n          icon={<SkipNextIcon />}\r\n          tooltipTitle=\"Skip\"\r\n          onClick={handleSkipClick}\r\n        />\r\n        <SpeedDialAction\r\n          icon={<WeekendIcon />}\r\n          tooltipTitle=\"Lobby\"\r\n          onClick={() => history.push(`/lobby/${url}`)}\r\n        />\r\n        <SpeedDialAction\r\n          icon={<HomeIcon />}\r\n          tooltipTitle=\"Home\"\r\n          onClick={() => history.push('/')}\r\n        />\r\n      </SpeedDial>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst drawerWidth = 240;\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    width: '100vw',\r\n    height: '100vh',\r\n    display: 'flex',\r\n  },\r\n  image: {\r\n    flexGrow: 1,\r\n    overflow: 'hidden',\r\n    transition: theme.transitions.create('margin', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    marginRight: -drawerWidth,\r\n  },\r\n  imageShift: {\r\n    transition: theme.transitions.create('margin', {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n    marginRight: 0,\r\n  },\r\n  speedDial: {\r\n    position: 'absolute',\r\n    bottom: theme.spacing(2),\r\n    right: theme.spacing(2),\r\n  },\r\n  speedDialShifted: {\r\n    right: theme.spacing(2) + drawerWidth,\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  drawerContent: {\r\n    padding: theme.spacing(3),\r\n  },\r\n  drawerImage: {\r\n    paddingTop: '56.25%', // 16:9\r\n    width: '100%',\r\n  },\r\n  alert: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  inputs: {\r\n    '& > div': {\r\n      margin: theme.spacing(2, 0),\r\n    },\r\n  },\r\n  dialogPaper: {\r\n    width: '100%',\r\n    maxWidth: 800,\r\n  },\r\n  dialogContent: {\r\n    width: '100%',\r\n    maxWidth: 800,\r\n    position: 'relative',\r\n    display: 'flex',\r\n    overflow: 'hidden',\r\n    '& > div': {\r\n      width: '50%',\r\n      position: 'relative',\r\n      overflow: 'auto',\r\n    },\r\n  },\r\n  guesses: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    padding: theme.spacing(),\r\n  },\r\n  guess: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(),\r\n  },\r\n}));\r\n\r\nexport default Game;\r\n","class Confetti {\r\n  frameInterval: number;\r\n  maxCount: number;\r\n  speed: number;\r\n  alpha: number;\r\n  gradient: boolean;\r\n  start: any;\r\n  stop: any;\r\n  toggle: any;\r\n  pause: any;\r\n  resume: any;\r\n  togglePause: any;\r\n  remove: any;\r\n  isPaused: any;\r\n  isRunning: any;\r\n  supportsAnimationFrame: any;\r\n  colors: any;\r\n  streamingConfetti: boolean;\r\n  animationTimer: any;\r\n  lastFrameTime: number;\r\n  particles: any[];\r\n  waveAngle: number;\r\n  context: any;\r\n\r\n  constructor() {\r\n    this.frameInterval = 15; //the confetti animation frame interval in milliseconds\r\n    this.maxCount = 150; //set max confetti count\r\n    this.speed = 2; //set the particle animation speed\r\n    this.alpha = 10; //the alpha opacity of the confetti (between 0 and 1, where 1 is opaque and 0 is invisible)\r\n    this.gradient = false; //whether to use gradients for the confetti particles\r\n    this.start = null; //call to start confetti animation (with optional timeout in milliseconds, and optional min and max random confetti count)\r\n    this.stop = null; //call to stop adding confetti\r\n    this.toggle = null; //call to start or stop the confetti animation depending on whether it's already running\r\n    this.pause = null; //call to freeze confetti animation\r\n    this.resume = null; //call to unfreeze confetti animation\r\n    this.togglePause = null; //call to toggle whether the confetti animation is paused\r\n    this.remove = null; //call to stop the confetti animation and remove all confetti immediately\r\n    this.isPaused = null; //call and returns true or false depending on whether the confetti animation is paused\r\n    this.isRunning = null; //call and returns true or false depending on whether the animation is running\r\n    this.supportsAnimationFrame =\r\n      window.requestAnimationFrame ||\r\n      window.webkitRequestAnimationFrame ||\r\n      (window as any).mozRequestAnimationFrame ||\r\n      (window as any).oRequestAnimationFrame ||\r\n      (window as any).msRequestAnimationFrame;\r\n    this.colors = [\r\n      'rgba(30,144,255,',\r\n      'rgba(107,142,35,',\r\n      'rgba(255,215,0,',\r\n      'rgba(255,192,203,',\r\n      'rgba(106,90,205,',\r\n      'rgba(173,216,230,',\r\n      'rgba(238,130,238,',\r\n      'rgba(152,251,152,',\r\n      'rgba(70,130,180,',\r\n      'rgba(244,164,96,',\r\n      'rgba(210,105,30,',\r\n      'rgba(220,20,60,',\r\n    ];\r\n    this.streamingConfetti = false;\r\n    this.animationTimer = null;\r\n    this.pause = false;\r\n    this.lastFrameTime = Date.now();\r\n    this.particles = [];\r\n    this.waveAngle = 0;\r\n    this.context = null;\r\n\r\n    this.resetParticle = this.resetParticle.bind(this);\r\n    this.runAnimation = this.runAnimation.bind(this);\r\n    this.toggleConfettiPause = this.toggleConfettiPause.bind(this);\r\n  }\r\n\r\n  resetParticle(particle, width, height) {\r\n    particle.color =\r\n      this.colors[(Math.random() * this.colors.length) | 0] +\r\n      (this.alpha + ')');\r\n    particle.color2 =\r\n      this.colors[(Math.random() * this.colors.length) | 0] +\r\n      (this.alpha + ')');\r\n    particle.x = Math.random() * width;\r\n    particle.y = Math.random() * height - height;\r\n    particle.diameter = Math.random() * 10 + 5;\r\n    particle.tilt = Math.random() * 10 - 10;\r\n    particle.tiltAngleIncrement = Math.random() * 0.07 + 0.05;\r\n    particle.tiltAngle = Math.random() * Math.PI;\r\n    return particle;\r\n  }\r\n\r\n  toggleConfettiPause() {\r\n    if (this.pause) this.resumeConfetti();\r\n    else this.pauseConfetti();\r\n  }\r\n\r\n  isConfettiPaused() {\r\n    return this.pause;\r\n  }\r\n\r\n  pauseConfetti() {\r\n    this.pause = true;\r\n  }\r\n\r\n  resumeConfetti() {\r\n    this.pause = false;\r\n    this.runAnimation();\r\n  }\r\n\r\n  runAnimation() {\r\n    if (this.pause) {\r\n      return;\r\n    } else if (this.particles.length === 0) {\r\n      this.context.clearRect(0, 0, window.innerWidth, window.innerHeight);\r\n      this.animationTimer = null;\r\n    } else {\r\n      var now = Date.now();\r\n      var delta = now - this.lastFrameTime;\r\n      if (!this.supportsAnimationFrame || delta > this.frameInterval) {\r\n        this.context.clearRect(0, 0, window.innerWidth, window.innerHeight);\r\n        this.updateParticles();\r\n        this.drawParticles(this.context);\r\n        this.lastFrameTime = now - (delta % this.frameInterval);\r\n      }\r\n      this.animationTimer = requestAnimationFrame(this.runAnimation);\r\n    }\r\n  }\r\n\r\n  startConfetti(timeout, min, max) {\r\n    var width = window.innerWidth;\r\n    var height = window.innerHeight;\r\n    var frameInterval = this.frameInterval;\r\n    window.requestAnimationFrame = (function () {\r\n      return (\r\n        window.requestAnimationFrame ||\r\n        window.webkitRequestAnimationFrame ||\r\n        (window as any).mozRequestAnimationFrame ||\r\n        (window as any).oRequestAnimationFrame ||\r\n        (window as any).msRequestAnimationFrame ||\r\n        function (callback) {\r\n          return window.setTimeout(callback, frameInterval);\r\n        }\r\n      );\r\n    })();\r\n    var canvas = document.getElementById(\r\n      'confetti-canvas',\r\n    ) as HTMLCanvasElement;\r\n    if (canvas === null) {\r\n      canvas = document.createElement('canvas');\r\n      canvas.setAttribute('id', 'confetti-canvas');\r\n      canvas.setAttribute(\r\n        'style',\r\n        'display:block;z-index:999999;pointer-events:none;position:fixed;top:0',\r\n      );\r\n      document.body.prepend(canvas);\r\n      canvas.width = width;\r\n      canvas.height = height;\r\n      window.addEventListener(\r\n        'resize',\r\n        function () {\r\n          canvas.width = window.innerWidth;\r\n          canvas.height = window.innerHeight;\r\n        },\r\n        true,\r\n      );\r\n      this.context = canvas.getContext('2d');\r\n    } else if (this.context === null) this.context = canvas.getContext('2d');\r\n    var count = this.maxCount;\r\n    if (min) {\r\n      if (max) {\r\n        if (min === max) count = this.particles.length + max;\r\n        else {\r\n          if (min > max) {\r\n            var temp = min;\r\n            min = max;\r\n            max = temp;\r\n          }\r\n          count =\r\n            this.particles.length + ((Math.random() * (max - min) + min) | 0);\r\n        }\r\n      } else count = this.particles.length + min;\r\n    } else if (max) count = this.particles.length + max;\r\n    while (this.particles.length < count)\r\n      this.particles.push(this.resetParticle({}, width, height));\r\n    this.streamingConfetti = true;\r\n    this.pause = false;\r\n    this.runAnimation.bind(this);\r\n    this.runAnimation();\r\n    if (timeout) {\r\n      window.setTimeout(this.stopConfetti, timeout);\r\n    }\r\n  }\r\n\r\n  stopConfetti() {\r\n    this.streamingConfetti = false;\r\n  }\r\n\r\n  removeConfetti() {\r\n    this.stopConfetti();\r\n    this.pause = false;\r\n    this.particles = [];\r\n  }\r\n\r\n  toggleConfetti() {\r\n    if (this.streamingConfetti) this.stopConfetti();\r\n    // TODO: Fix\r\n    // @ts-ignore\r\n    else this.startConfetti();\r\n  }\r\n\r\n  isConfettiRunning() {\r\n    return this.streamingConfetti;\r\n  }\r\n\r\n  drawParticles(context) {\r\n    var particle;\r\n    var x, x2, y2;\r\n    for (var i = 0; i < this.particles.length; i++) {\r\n      particle = this.particles[i];\r\n      context.beginPath();\r\n      context.lineWidth = particle.diameter;\r\n      x2 = particle.x + particle.tilt;\r\n      x = x2 + particle.diameter / 2;\r\n      y2 = particle.y + particle.tilt + particle.diameter / 2;\r\n      if (this.gradient) {\r\n        var gradient = context.createLinearGradient(x, particle.y, x2, y2);\r\n        gradient.addColorStop('0', particle.color);\r\n        gradient.addColorStop('1.0', particle.color2);\r\n        context.strokeStyle = gradient;\r\n      } else context.strokeStyle = particle.color;\r\n      context.moveTo(x, particle.y);\r\n      context.lineTo(x2, y2);\r\n      context.stroke();\r\n    }\r\n  }\r\n\r\n  updateParticles() {\r\n    var width = window.innerWidth;\r\n    var height = window.innerHeight;\r\n    var particle;\r\n    this.waveAngle += 0.01;\r\n    for (var i = 0; i < this.particles.length; i++) {\r\n      particle = this.particles[i];\r\n      if (!this.streamingConfetti && particle.y < -15)\r\n        particle.y = height + 100;\r\n      else {\r\n        particle.tiltAngle += particle.tiltAngleIncrement;\r\n        particle.x += Math.sin(this.waveAngle) - 0.5;\r\n        particle.y +=\r\n          (Math.cos(this.waveAngle) + particle.diameter + this.speed) * 0.5;\r\n        particle.tilt = Math.sin(particle.tiltAngle) * 15;\r\n      }\r\n      if (particle.x > width + 20 || particle.x < -20 || particle.y > height) {\r\n        if (this.streamingConfetti && this.particles.length <= this.maxCount)\r\n          this.resetParticle(particle, width, height);\r\n        else {\r\n          this.particles.splice(i, 1);\r\n          i--;\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default Confetti;\r\n","import React, { FC, useEffect, useState } from 'react';\r\nimport { Link, useParams } from 'react-router-dom';\r\n\r\nimport { makeStyles, Theme } from '@material-ui/core';\r\nimport Button from '@material-ui/core/Button';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport HomeIcon from '@material-ui/icons/Home';\r\n\r\nimport { useContext } from '../../context';\r\nimport IGameResults from '../../interfaces/IGameResults';\r\nimport Confetti from '../../utils/Confetti';\r\n\r\nconst GameResults: FC = () => {\r\n  const params: any = useParams();\r\n  const { url } = params;\r\n  const classes = useStyles();\r\n  const [{ isLoaded, stats }] = useContext();\r\n  const { history } = stats;\r\n  const [record, setRecord] = useState<IGameResults | undefined>(undefined);\r\n  const [recordNotFound, setRecordNotFound] = useState(false);\r\n\r\n  useEffect(() => {\r\n    let con;\r\n\r\n    if (url && isLoaded) {\r\n      const record = history.find(\r\n        (record) => record.imageSource === decodeURIComponent(url),\r\n      );\r\n      if (record) {\r\n        setRecord(record);\r\n        setRecordNotFound(false);\r\n        con = new Confetti();\r\n        // TODO: Fix\r\n        // @ts-ignore\r\n        con.startConfetti();\r\n        setTimeout(() => con.stopConfetti(), 3000);\r\n      } else {\r\n        setRecordNotFound(true);\r\n      }\r\n    }\r\n\r\n    return () => {\r\n      if (con) {\r\n        con.stopConfetti();\r\n      }\r\n    };\r\n  }, [isLoaded, url, history]);\r\n\r\n  if (recordNotFound) {\r\n    return <div>Cannot find record.</div>;\r\n  }\r\n\r\n  if (!record) {\r\n    return <div>Loading . . .</div>;\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Typography variant=\"h2\">Congratulations {record.winner}!</Typography>\r\n      <Typography variant=\"h3\">You are the winner!!!</Typography>\r\n      <Divider />\r\n      <Card className={classes.card}>\r\n        <CardHeader title={record.location} />\r\n        <CardMedia\r\n          className={classes.media}\r\n          image={record.imageSource}\r\n          title={record.location}\r\n        >\r\n          {record?.location}\r\n        </CardMedia>\r\n      </Card>\r\n      <Button\r\n        color=\"primary\"\r\n        variant=\"contained\"\r\n        size=\"large\"\r\n        startIcon={<HomeIcon />}\r\n        component={Link}\r\n        to=\"/\"\r\n      >\r\n        Back to Home\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    width: '100%',\r\n    height: '100%',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    padding: theme.spacing(2),\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: '56.25%', // 16:9\r\n  },\r\n  card: {\r\n    margin: theme.spacing(4),\r\n  },\r\n}));\r\n\r\nexport default GameResults;\r\n","import React from 'react';\r\n\r\nimport { makeStyles, Theme } from '@material-ui/core';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { useContext } from '../../context';\r\n\r\nconst generateAverageWin = (wins, total) => {\r\n  const avg =\r\n    wins && total ? Math.round(100 * (Number(wins) / Number(total))) : 0;\r\n  return `${avg} %`;\r\n};\r\n\r\ninterface IProps {}\r\n\r\nconst PlayerStats = () => {\r\n  const classes = useStyles();\r\n  const [{ game }] = useContext();\r\n  const { players } = game;\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Typography variant=\"subtitle2\">Player Stats</Typography>\r\n      <div className={['styled-scrollbar', classes.players].join(' ')}>\r\n        {players\r\n          .filter((player) => player.active)\r\n          .sort((a, b) => b.wins - a.wins)\r\n          .map((player, index) => (\r\n            <Card className={classes.card} key={player.name}>\r\n              <CardContent className={classes.cardContent}>\r\n                <div className={classes.position}>\r\n                  <Typography variant=\"h4\">{index + 1}</Typography>\r\n                </div>\r\n                <div className={classes.info}>\r\n                  <Typography variant=\"h6\">{player.name}</Typography>\r\n                  <Grid container spacing={0}>\r\n                    <Grid item xs={6}>\r\n                      <Typography>\r\n                        <small>{player.wins === 1 ? 'Win' : 'Wins'}</small>{' '}\r\n                        {player.wins}\r\n                      </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                      <Typography>\r\n                        <small>Win rate</small>{' '}\r\n                        {generateAverageWin(player.wins, player.gamesPlayed)}\r\n                      </Typography>\r\n                    </Grid>\r\n                    {/* <Grid item xs={4}>\r\n                      <Typography>\r\n                        {player.streak > 0 && <span>{player.streak}</span>}\r\n                      </Typography>\r\n                    </Grid> */}\r\n                  </Grid>\r\n                </div>\r\n                <Typography></Typography>\r\n              </CardContent>\r\n            </Card>\r\n          ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    flexGrow: 1,\r\n    overflow: 'hidden',\r\n    height: '100%',\r\n  },\r\n  players: {\r\n    overflow: 'auto',\r\n    flexGrow: 1,\r\n  },\r\n  card: {\r\n    display: 'flex',\r\n    marginBottom: theme.spacing(),\r\n  },\r\n  cardContent: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    padding: theme.spacing(),\r\n    width: '100%',\r\n    '&:last-child': {\r\n      paddingBottom: theme.spacing(),\r\n    },\r\n  },\r\n  position: {\r\n    margin: theme.spacing(0, 2, 0, 1),\r\n  },\r\n  info: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nexport default PlayerStats;\r\n","import React, { FC, useState } from 'react';\r\n\r\nimport { makeStyles, Theme } from '@material-ui/core';\r\nimport { TransitionProps } from '@material-ui/core/transitions/transition';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Link from '@material-ui/core/Link';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nimport { useContext } from '../../context';\r\n\r\nconst WINNER_EMOJIS = ['🎉', '😊', '🥳', '🎊'];\r\nconst NO_ONE_EMOJIS = ['🤖', '💩', '🖥️', '👾', '💻'];\r\n\r\nconst Transition = React.forwardRef(function Transition(\r\n  props: TransitionProps & { children?: React.ReactElement },\r\n  ref: React.Ref<unknown>,\r\n) {\r\n  return <Slide direction=\"down\" ref={ref} {...props} />;\r\n});\r\n\r\ninterface IProps {}\r\n\r\nconst GameResultsListing: FC<IProps> = () => {\r\n  const classes = useStyles();\r\n  const [{ stats }] = useContext();\r\n  const { history } = stats;\r\n\r\n  const [dialogImageSource, setDialogImageSource] = useState<string | boolean>(\r\n    false,\r\n  );\r\n\r\n  const handleClickOpen = (source: string) => {\r\n    setDialogImageSource(source);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setDialogImageSource(false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Typography variant=\"subtitle2\" className={classes.title}>\r\n        Game Results <Typography variant=\"caption\">Last 50 games</Typography>\r\n      </Typography>\r\n      <div className={['styled-scrollbar', classes.results].join(' ')}>\r\n        {history &&\r\n          history.slice(0, 50).map((record, i) => {\r\n            let emoji = '';\r\n            if (record.winner === 'No one') {\r\n              emoji =\r\n                NO_ONE_EMOJIS[Math.floor(Math.random() * NO_ONE_EMOJIS.length)];\r\n            } else if (record.winner !== 'SKIPPED') {\r\n              emoji =\r\n                WINNER_EMOJIS[Math.floor(Math.random() * WINNER_EMOJIS.length)];\r\n            }\r\n            return (\r\n              <div key={`${record.imageSource}-${i}`}>\r\n                <Card\r\n                  className={[\r\n                    classes.card,\r\n                    record.winner === 'SKIPPED' ? classes.skipped : '',\r\n                  ].join(' ')}\r\n                >\r\n                  {record.imageSource && (\r\n                    <CardMedia\r\n                      className={classes.media}\r\n                      image={record.imageSource}\r\n                      title={record.location}\r\n                      onClick={() => handleClickOpen(record.imageSource)}\r\n                    />\r\n                  )}\r\n                  <CardContent className={classes.cardContent}>\r\n                    <Typography variant=\"caption\">\r\n                      {record.momentDate.format('ddd, MMMM D, YYYY h:mm A')}\r\n                    </Typography>\r\n                    <Typography variant=\"body1\">{record.location}</Typography>\r\n                    <div className={classes.link}>\r\n                      {record.imageSource && (\r\n                        <Link\r\n                          href={record.imageSource}\r\n                          target=\"_blank\"\r\n                          rel=\"noreferrer\"\r\n                        >\r\n                          {record.imageSource}\r\n                        </Link>\r\n                      )}\r\n                    </div>\r\n                    <Divider className={classes.divider} />\r\n                    {record.guesses &&\r\n                      Object.entries(record.guesses).map(([key, value]) => (\r\n                        <Chip\r\n                          key={key}\r\n                          label={`${key} - ${value}`}\r\n                          size=\"small\"\r\n                          variant={\r\n                            key === record.winner ? 'default' : 'outlined'\r\n                          }\r\n                          className={classes.chip}\r\n                        />\r\n                      ))}\r\n                    <Typography\r\n                      variant=\"h4\"\r\n                      color={\r\n                        record.winner === 'No one' ? 'error' : 'textPrimary'\r\n                      }\r\n                    >\r\n                      {emoji}\r\n                      {record.winner}\r\n                    </Typography>\r\n                  </CardContent>\r\n                </Card>\r\n              </div>\r\n            );\r\n          })}\r\n      </div>\r\n      <Dialog\r\n        fullScreen\r\n        open={Boolean(dialogImageSource)}\r\n        onClose={handleClose}\r\n        TransitionComponent={Transition}\r\n      >\r\n        <AppBar className={classes.appBar}>\r\n          <Toolbar>\r\n            <IconButton\r\n              edge=\"start\"\r\n              color=\"inherit\"\r\n              onClick={handleClose}\r\n              aria-label=\"close\"\r\n            >\r\n              <CloseIcon />\r\n            </IconButton>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <div\r\n          style={{\r\n            background: `#000 url(${dialogImageSource}) center / contain no-repeat`,\r\n          }}\r\n          className={classes.dialogImage}\r\n        ></div>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    height: '100%',\r\n    overflow: 'hidden',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n  title: {},\r\n  results: {\r\n    overflow: 'auto',\r\n    flexGrow: 1,\r\n  },\r\n  card: {\r\n    display: 'flex',\r\n    marginBottom: theme.spacing(),\r\n  },\r\n  cardContent: {\r\n    overflow: 'hidden',\r\n  },\r\n  media: {\r\n    width: '30%',\r\n    flexShrink: 0,\r\n    cursor: 'pointer',\r\n  },\r\n  link: {\r\n    whiteSpace: 'nowrap',\r\n    textOverflow: 'ellipsis',\r\n    overflow: 'hidden',\r\n  },\r\n  divider: {\r\n    margin: theme.spacing(2, 0),\r\n  },\r\n  chip: {\r\n    margin: theme.spacing(0, 1, 1, 0),\r\n  },\r\n  appBar: {\r\n    position: 'relative',\r\n  },\r\n  dialogImage: {\r\n    height: '100%',\r\n    width: '100%',\r\n  },\r\n  skipped: {\r\n    opacity: 0.4,\r\n  },\r\n}));\r\n\r\nexport default GameResultsListing;\r\n","import React, { FC, useEffect, useState } from 'react';\r\n\r\nimport { makeStyles, Theme } from '@material-ui/core';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { useContext } from './../../context';\r\n\r\nconst WinningStats: FC = () => {\r\n  const classes = useStyles();\r\n  const [{ stats }] = useContext();\r\n  const { history } = stats;\r\n\r\n  const [winningLocations, setWinningLocations] = useState<any[]>([]);\r\n  const [favoriteGuesses, setFavoriteGuesses] = useState<any[]>([]);\r\n\r\n  useEffect(() => {\r\n    const groupedCounts = history\r\n      .map((record) => record.guesses[record.winner])\r\n      .filter((record) => record)\r\n      .reduce((acc: object, record: string) => {\r\n        if (acc[record]) {\r\n          acc[record].count++;\r\n        } else {\r\n          acc[record] = { value: record, count: 1 };\r\n        }\r\n        return acc;\r\n      }, {});\r\n    const winningLocations = Object.values(groupedCounts).sort(\r\n      (a: any, b: any) => b.count - a.count,\r\n    );\r\n    setWinningLocations(winningLocations);\r\n  }, [history]);\r\n\r\n  useEffect(() => {\r\n    const groupedGuesses = history\r\n      .map((record) => record.guesses)\r\n      .reduce((acc, record) => {\r\n        if (typeof record === 'object') {\r\n          Object.entries(record).forEach(([key, value]) => {\r\n            if (!acc[key]) {\r\n              acc[key] = {};\r\n            }\r\n            if (!acc[key][value]) {\r\n              acc[key][value] = 1;\r\n            } else {\r\n              acc[key][value]++;\r\n            }\r\n          });\r\n        }\r\n        return acc;\r\n      }, {} as any);\r\n    const favoriteGuesses = Object.entries(groupedGuesses).map(\r\n      ([key, value]: [any, any]) => ({\r\n        user: key,\r\n        guesses: Object.entries(value)\r\n          .map(([x, y]) => ({\r\n            guess: x,\r\n            count: y,\r\n          }))\r\n          .sort((a: any, b: any) => b.count - a.count),\r\n      }),\r\n    );\r\n    setFavoriteGuesses(favoriteGuesses);\r\n    console.log(favoriteGuesses);\r\n  }, [history]);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.sectionLeft}>\r\n        <Typography variant=\"subtitle2\">Top 15 Winning Locations</Typography>\r\n        {winningLocations.length > 0 && (\r\n          <div className={[classes.sectionBody, 'styled-scrollbar'].join(' ')}>\r\n            <Paper>\r\n              <List dense={true} className={classes.list}>\r\n                {winningLocations.slice(0, 15).map((location) => (\r\n                  <ListItem key={location.value} className={classes.listItem}>\r\n                    <ListItemIcon className={classes.listItemIcon}>\r\n                      {location.count}\r\n                    </ListItemIcon>\r\n                    <ListItemText primary={location.value} />\r\n                  </ListItem>\r\n                ))}\r\n              </List>\r\n            </Paper>\r\n          </div>\r\n        )}\r\n      </div>\r\n      <div className={classes.sectionRight}>\r\n        <Typography variant=\"subtitle2\">Favorite Guesses</Typography>\r\n        {favoriteGuesses.length > 0 && (\r\n          <div className={[classes.sectionBody, 'styled-scrollbar'].join(' ')}>\r\n            <Paper>\r\n              <List dense={true} className={classes.list}>\r\n                {favoriteGuesses.map((userGuesses) => {\r\n                  const topGuess = userGuesses.guesses[0];\r\n                  const secondaryText = topGuess\r\n                    ? `Guessed ${topGuess.guess} ${topGuess.count} time${\r\n                        topGuess.count === 1 ? '' : 's'\r\n                      }`\r\n                    : '';\r\n                  return (\r\n                    <ListItem\r\n                      key={userGuesses.user}\r\n                      className={classes.listItem}\r\n                    >\r\n                      <ListItemText\r\n                        primary={userGuesses.user}\r\n                        secondary={secondaryText}\r\n                      />\r\n                    </ListItem>\r\n                  );\r\n                })}\r\n              </List>\r\n            </Paper>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    height: '100%',\r\n    overflow: 'hidden',\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n  },\r\n  sectionLeft: {\r\n    height: '100%',\r\n    overflow: 'hidden',\r\n    width: '49%',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n  sectionRight: {\r\n    height: '100%',\r\n    overflow: 'hidden',\r\n    width: '49%',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n  sectionBody: {\r\n    flexGrow: 1,\r\n    overflow: 'auto',\r\n  },\r\n  list: {},\r\n  listItem: {},\r\n  listItemIcon: {\r\n    minWidth: 35,\r\n    justifyContent: 'flex-end',\r\n    paddingRight: theme.spacing(2.5),\r\n  },\r\n}));\r\n\r\nexport default WinningStats;\r\n","import React, { FC } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { makeStyles, Theme } from '@material-ui/core';\r\nimport Button from '@material-ui/core/Button';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\n\r\nimport TopThree from './TopThree';\r\nimport PlayerStats from './PlayerStats';\r\nimport GameResultsListing from './GameResultsListing';\r\nimport WinningStats from './WinningStats';\r\n\r\ninterface IProps {}\r\n\r\nconst Leaderboards: FC<IProps> = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.left}>\r\n        <div className={[classes.leftRow, classes.leftRowNoShrink].join(' ')}>\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            size=\"large\"\r\n            startIcon={<HomeIcon />}\r\n            component={Link}\r\n            to=\"/\"\r\n          >\r\n            Back to Home\r\n          </Button>\r\n        </div>\r\n        <div className={[classes.leftRow, classes.leftRowNoShrink].join(' ')}>\r\n          <TopThree />\r\n        </div>\r\n        <div className={classes.leftRow}>\r\n          <WinningStats />\r\n        </div>\r\n        <div className={classes.leftRow}>\r\n          <PlayerStats />\r\n        </div>\r\n      </div>\r\n      <div className={classes.right}>\r\n        <GameResultsListing />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    height: '100vh',\r\n    width: '100vw',\r\n    overflow: 'hidden',\r\n    display: 'flex',\r\n    padding: theme.spacing(),\r\n  },\r\n  left: {\r\n    width: '40%',\r\n    padding: theme.spacing(),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    overflow: 'hidden',\r\n  },\r\n  leftRow: {\r\n    overflow: 'hidden',\r\n    marginBottom: theme.spacing(2),\r\n    '&:last-child': {\r\n      marginBottom: 0,\r\n    },\r\n  },\r\n  leftRowNoShrink: {\r\n    flexShrink: 0,\r\n  },\r\n  right: {\r\n    width: '60%',\r\n    padding: theme.spacing(),\r\n  },\r\n}));\r\n\r\nexport default Leaderboards;\r\n","import React from 'react';\r\nimport { BrowserRouter, Route } from 'react-router-dom';\r\n\r\nimport Login from './Login';\r\n\r\nimport PrivateRoute from './private/PrivateRoute';\r\nimport Home from './private/Home';\r\nimport Lobby from './private/Lobby';\r\nimport Game from './private/Game';\r\nimport GameResults from './private/GameResults';\r\nimport Leaderboards from './private/Leaderboards';\r\n\r\nconst Routes = () => {\r\n  return (\r\n    <BrowserRouter>\r\n      <Route path=\"/login\" component={Login} />\r\n      <PrivateRoute exact path=\"/\" component={Home} />\r\n      <PrivateRoute path=\"/lobby/:url?\" component={Lobby} />\r\n      <PrivateRoute path=\"/game/:url?\" component={Game} />\r\n      <PrivateRoute path=\"/game-results/:url?\" component={GameResults} />\r\n      <PrivateRoute path=\"/leaderboards\" component={Leaderboards} />\r\n    </BrowserRouter>\r\n  );\r\n};\r\n\r\nexport default Routes;\r\n","import React, { FC } from 'react';\r\n\r\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\n\r\nimport Routes from './Routes';\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    type: 'dark',\r\n  },\r\n  typography: {\r\n    fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\r\n  },\r\n});\r\n\r\nexport const App: FC = () => {\r\n  return (\r\n    <MuiThemeProvider theme={theme}>\r\n      <CssBaseline />\r\n      <Routes />\r\n    </MuiThemeProvider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport ContextProvider from './context';\r\nimport App from './components/App';\r\n\r\nimport './index.scss';\r\n\r\nReactDOM.render(\r\n  <ContextProvider>\r\n    <App />\r\n  </ContextProvider>,\r\n  document.getElementById('root') as HTMLElement,\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/crown.684af6ea.png\";"],"sourceRoot":""}